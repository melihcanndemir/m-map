name: Build and Release

on:
  push:
    tags:
      - "v*" # v1.0, v2.3 gibi tag'lerle pushlanınca tetiklenecek

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            asset_name: m-map-windows.exe
            list_command: dir
          - os: ubuntu-latest
            asset_name: m-map-linux
            list_command: ls -la

    steps:
      # 1) Kodun checkout edilmesi
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2) Python kurulumu
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      # 3) Bağımlılıkların yüklenmesi
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip --no-cache-dir
          pip install -r requirements.txt --no-cache-dir
          pip install pyinstaller --no-cache-dir

      # 4) Dist klasörünü oluştur
      - name: Create dist directory
        run: mkdir -p dist

      # 5) Windows için PyInstaller Build
      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          REM Pyfiglet'in fonts klasör yolunu bulalım
          for /f "tokens=*" %%i in ('python -c "import pyfiglet, os; print(os.path.dirname(pyfiglet.__file__))"') do set FONT_PATH=%%i

          REM Ana script dosyası = m_map/m_map.py
          pyinstaller --onefile ^
                      --name %ASSET_NAME% ^
                      --add-data "%FONT_PATH%\fonts;pyfiglet/fonts" ^
                      --clean m_map\m_map.py

          REM Derlenen dosyaları dist klasörüne alalım
          move /Y dist\* dist\

        env:
          ASSET_NAME: ${{ matrix.asset_name }}

      # 6) Linux için PyInstaller Build
      - name: Build with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          FONT_PATH=$(python -c "import pyfiglet, os; print(os.path.dirname(pyfiglet.__file__))")

          # Ana script dosyası = m_map/m_map.py
          pyinstaller --onefile \
                      --name "${{ matrix.asset_name }}" \
                      --add-data "$FONT_PATH/fonts:pyfiglet/fonts" \
                      --clean m_map/m_map.py

          mv dist/* dist/

      # 7) Derlenen dosyaları list
      - name: List Build Directory
        run: |
          echo "Listing dist directory:"
          ${{ matrix.list_command }} dist
          echo "Current directory:"
          pwd

      # 8) Release oluşturma
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## M-MAP Release ${{ github.ref_name }}

            ### Changes
            - Enhanced service detection with banner grabbing
            - Improved test coverage (~50%)
            - Added new network testing capabilities
            - Bug fixes and improvements

            ### Downloads
            - Windows: m-map-windows.exe
            - Linux: m-map-linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
